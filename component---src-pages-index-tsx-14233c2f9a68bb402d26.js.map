{"version":3,"sources":["webpack:///./src/components/TypingAnimation.tsx","webpack:///./src/pages/index.tsx"],"names":["message","onMessageTyped","useState","typed","setTyped","blinkerVisible","setBlinkerVisible","useEffect","id","setInterval","clearInterval","applyAction","useCallback","action","type","t","slice","length","value","current","target","i","substring","toAdd","getAction","toWait","setTimeout","bClass","className","messages","messageIndex","setMessageIndex","greetingFinished","setGreetingFinished","nextMessage","leaving","setLeaving","nextPage","navigate","containerProps","useVerticalBehaviour","downConfig","callback","SEO","title","TypingAnimation","LinksBar","onClick"],"mappings":"oJAoBe,cAA6B,IAA3BA,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eAAkB,EAChBC,mBAAS,IAA5BC,EADmC,KAC5BC,EAD4B,OAEEF,oBAAS,GAA9CG,EAFmC,KAEnBC,EAFmB,KAK1CC,qBAAU,WACR,IAAMC,EAAKC,aAAY,WAKnBH,GAJED,KAzBQ,KAgCd,OAAO,kBAAIK,cAAcF,MACxB,CAACH,IAEJ,IAAMM,EAAcC,uBAAY,SAACC,GAC/BP,GAAkB,GACD,WAAdO,EAAOC,MACRV,GAAS,SAAAW,GAAC,OAAEA,EAAEC,MAAM,EAAGD,EAAEE,OAAO,MAEjB,QAAdJ,EAAOC,MACRV,GAAS,SAAAW,GAAC,OAAEA,EAAEF,EAAOK,WAEtB,IAGHX,qBAAU,WACR,IAAMM,EA3CQ,SAACM,EAASC,GAC1B,IAAIC,EAAE,EACN,IAAIA,EAAE,EAAGF,EAAQE,IAAID,EAAOC,IAAIF,EAAQE,IAAID,EAAOC,GAAGA,KAEtD,GADiBF,EAAQG,UAAUD,EAAGF,EAAQF,QAE5C,MAAO,CAACH,KAAM,UAEhB,IAAMS,EAAQH,EAAOE,UAAUD,EAAGD,EAAOH,QACzC,OAAGM,EACM,CAACT,KAAM,MAAOI,MAAOK,EAAM,IAE7B,CAACT,KAAM,QAgCGU,CAAUrB,EAAOH,GAChC,GAAiB,SAAda,EAAOC,KAAV,CAIA,IAAIW,EAnDS,IAoDI,WAAdZ,EAAOC,OACRW,EApDa,IAsDfC,YAAW,kBAAIf,EAAYE,KAASY,QAPlCxB,MAQD,CAACE,EAAOQ,EAAaX,IAGxB,IAAM2B,EAAStB,EAAe,GAAG,SACjC,OACE,oCAAGF,EAAM,yBAAKyB,UAAS,eAAiBD,M,4DClDtCE,G,UAAW,CACf,QACA,oBACA,sBAIa,qBAAM,MACqB3B,mBAAS,GAA1C4B,EADY,KACEC,EADF,OAE6B7B,oBAAS,GAAlD8B,EAFY,KAEMC,EAFN,KAGbC,EAActB,uBAAY,WAC3BkB,GAAcD,EAASZ,OAAO,EAC/BS,YAAW,kBAAIO,GAAoB,KAbxB,KAgBXP,YACE,kBAAIK,GAAgB,SAAAV,GAAC,OAAEA,EAAEQ,EAASZ,OAAO,EAAEI,EAAE,EAAEA,OAjBtC,OAqBZ,CAACS,IAbe,EAeW5B,oBAAS,GAAhCiC,EAfY,KAeHC,EAfG,KAgBbC,EAAWzB,uBAAY,WAC3BwB,GAAW,GACXV,YAAW,kBAAIY,YAAS,YAAW,QAClC,IAEIC,EAAkBC,YAAqB,OAAD,UACxCC,IADwC,CAE3CC,SAAUL,KAFLE,eAKP,OACE,oCACE,kBAACI,EAAA,EAAD,CAAKC,MAAM,uBACX,wCAAMhB,UAAS,iBAAkBO,EAAQ,UAAU,KAC7CI,GAEJ,wBAAIX,UAAU,kBACZ,kBAACiB,EAAD,CACE7C,QAAS6B,EAASC,GAClB7B,eAAgBiC,KAGpB,kBAACY,EAAA,EAAD,CAAUlB,UAAWI,EAAiB,OAAO,MAE/C,yBAAKJ,UAAS,oBAAqBI,EAAiB,OAAO,KACzD,kBAAC,IAAD,CAAgBe,QAASV,KAE3B,yBAAKT,UAAS,cAAeO,EAAQ,OAAO","file":"component---src-pages-index-tsx-14233c2f9a68bb402d26.js","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nconst blinkerMs = 730;\nconst toTypeMs = 120;\nconst toDeleteMs = 80;\n\nconst getAction = (current, target) => {\n  let i=0;\n  for(i=0; current[i]&&target[i]&&current[i]==target[i];i++);\n  const toDelete = current.substring(i, current.length);\n  if(toDelete){\n    return {type: 'delete'};\n  }\n  const toAdd = target.substring(i, target.length);\n  if(toAdd){\n    return {type: 'add', value: toAdd[0]};\n  }\n  return {type: 'none'};\n};\n\nexport default ({message, onMessageTyped})=>{\n  const [typed, setTyped] = useState('');\n  const [blinkerVisible, setBlinkerVisible] = useState(false);\n\n  // Blinker effect\n  useEffect(()=>{\n    const id = setInterval(()=>{\n      if(!blinkerVisible){\n        setBlinkerVisible(true);\n      }\n      else {\n        setBlinkerVisible(false);\n      }\n    }, blinkerMs);\n    return ()=>clearInterval(id);\n  }, [blinkerVisible]);\n\n  const applyAction = useCallback((action)=>{\n    setBlinkerVisible(true);\n    if(action.type===\"delete\"){\n      setTyped(t=>t.slice(0, t.length-1));\n    }\n    if(action.type===\"add\"){\n      setTyped(t=>t+action.value);\n    }\n  }, []);\n\n  // Typing effect\n  useEffect(()=>{\n    const action = getAction(typed, message);\n    if(action.type===\"none\"){\n      onMessageTyped();\n      return;\n    }\n    let toWait = toTypeMs;\n    if(action.type===\"delete\"){\n      toWait = toDeleteMs;\n    }\n    setTimeout(()=>applyAction(action), toWait)\n  }, [typed, applyAction, message]);\n\n\n  const bClass = blinkerVisible?'':'hidden';\n  return (\n    <>{typed}<div className={`text-cursor ${bClass}`} /></>\n  )\n}\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport TypingAnimation from '../components/TypingAnimation';\nimport SEO from '../components/SEO';\nimport LinksBar from '../components/LinksBar';\nimport cvPdf from '../public-cv.pdf';\nimport {MdEmail} from 'react-icons/md';\nimport {FaGithub, FaLinkedin} from 'react-icons/fa';\nimport {IoIosArrowDown} from 'react-icons/io';\nimport {navigate} from 'gatsby';\nimport {useVerticalBehaviour, downConfig} from '../utils/vertical-behaviour';\n\nimport \"../styles/main.scss\";\n\nconst idleTime = 700; // Pauses between typed messages\nconst messages = [\n  'Hi!!!',\n  \"Hi... I'm Joshua.\",\n  \"Hi... I'm Joshua!\",\n];\n\n\nexport default () => {\n  const [messageIndex, setMessageIndex] = useState(0);\n  const [greetingFinished, setGreetingFinished] = useState(false);\n  const nextMessage = useCallback(()=>{\n    if(messageIndex>=messages.length-1){\n      setTimeout(()=>setGreetingFinished(true), idleTime);\n    }\n    else{\n      setTimeout(\n        ()=>setMessageIndex(i=>i<messages.length-1?i+1:i),\n        idleTime\n      );\n    }\n  }, [messageIndex]);\n\n  const [leaving, setLeaving] = useState(false);\n  const nextPage = useCallback(()=>{\n    setLeaving(true);\n    setTimeout(()=>navigate('/hello'), 2200);\n  }, []);\n\n  const {containerProps} = useVerticalBehaviour({\n    ...downConfig,\n    callback: nextPage\n  });\n\n  return (\n    <>\n      <SEO title=\"Software Developer\"/>\n      <main className={`landing-page ${leaving?'leaving':''}`}\n        {...containerProps}\n      >\n        <h1 className=\"header-message\">\n          <TypingAnimation\n            message={messages[messageIndex]}\n            onMessageTyped={nextMessage}\n          />\n        </h1>\n        <LinksBar className={greetingFinished?'show':''} />\n      </main>\n      <div className={`scroll-more-bar ${greetingFinished?'glow':''}`}>\n        <IoIosArrowDown onClick={nextPage} />\n      </div>\n      <div className={`next-page ${leaving?'grow':''}`}/>\n    </>\n  );\n}\n"],"sourceRoot":""}